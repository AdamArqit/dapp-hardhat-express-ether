/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Lock, LockInterface } from "../Lock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "deleteProduct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllProducts",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "quantity",
            type: "uint256",
          },
        ],
        internalType: "struct Lock.Product[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getProduct",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "productArray",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "products",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeMe",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
    ],
    name: "setProduct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
    ],
    name: "updateProduct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611808806100606000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80637acc0b201161005b5780637acc0b20146101165780639d08f4a914610149578063b9db15b41461016a578063ed90c7b71461019c57610088565b806302ee3a521461008d5780631cce0cf5146100ab5780632d561787146100de5780634a20087e146100fa575b600080fd5b6100956101b8565b6040516100a29190610eeb565b60405180910390f35b6100c560048036038101906100c09190610f4d565b6102c7565b6040516100d59493929190610fd3565b60405180910390f35b6100f860048036038101906100f39190611154565b61038f565b005b610114600480360381019061010f9190611154565b610572565b005b610130600480360381019061012b9190610f4d565b6106f9565b6040516101409493929190610fd3565b60405180910390f35b6101516107b1565b6040516101619493929190610fd3565b60405180910390f35b610184600480360381019061017f9190610f4d565b610857565b604051610193939291906111d7565b60405180910390f35b6101b660048036038101906101b19190610f4d565b6109a4565b005b60606006805480602002602001604051908101604052809291908181526020016000905b828210156102be57838290600052602060002090600402016040518060800160405290816000820154815260200160018201805461021990611244565b80601f016020809104026020016040519081016040528092919081815260200182805461024590611244565b80156102925780601f1061026757610100808354040283529160200191610292565b820191906000526020600020905b81548152906001019060200180831161027557829003601f168201915b5050505050815260200160028201548152602001600382015481525050815260200190600101906101dc565b50505050905090565b600681815481106102d757600080fd5b906000526020600020906004020160009150905080600001549080600101805461030090611244565b80601f016020809104026020016040519081016040528092919081815260200182805461032c90611244565b80156103795780601f1061034e57610100808354040283529160200191610379565b820191906000526020600020905b81548152906001019060200180831161035c57829003601f168201915b5050505050908060020154908060030154905084565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461041d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610414906112c1565b60405180910390fd5b6000600560008681526020019081526020016000206000015403610476576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046d9061132d565b60405180910390fd5b61047f846109a4565b604051806080016040528085815260200184815260200183815260200182815250600560008681526020019081526020016000206000820151816000015560208201518160010190816104d291906114f9565b5060408201518160020155606082015181600301559050506006604051806080016040528086815260200185815260200184815260200183815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000155602082015181600101908161055591906114f9565b506040820151816002015560608201518160030155505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610600576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f7906112c1565b60405180910390fd5b60006040518060800160405280868152602001858152602001848152602001838152509050806005600087815260200190815260200160002060008201518160000155602082015181600101908161065891906114f9565b506040820151816002015560608201518160030155905050600660405180608001604052808781526020018681526020018581526020018481525090806001815401808255809150506001900390600052602060002090600402016000909190919091506000820151816000015560208201518160010190816106db91906114f9565b50604082015181600201556060820151816003015550505050505050565b600560205280600052604060002060009150905080600001549080600101805461072290611244565b80601f016020809104026020016040519081016040528092919081815260200182805461074e90611244565b801561079b5780601f106107705761010080835404028352916020019161079b565b820191906000526020600020905b81548152906001019060200180831161077e57829003601f168201915b5050505050908060020154908060030154905084565b60018060000154908060010180546107c890611244565b80601f01602080910402602001604051908101604052809291908181526020018280546107f490611244565b80156108415780601f1061081657610100808354040283529160200191610841565b820191906000526020600020905b81548152906001019060200180831161082457829003601f168201915b5050505050908060020154908060030154905084565b606060008060006005600086815260200190815260200160002060000154036108b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ac9061132d565b60405180910390fd5b600060056000868152602001908152602001600020604051806080016040529081600082015481526020016001820180546108ef90611244565b80601f016020809104026020016040519081016040528092919081815260200182805461091b90611244565b80156109685780601f1061093d57610100808354040283529160200191610968565b820191906000526020600020905b81548152906001019060200180831161094b57829003601f168201915b50505050508152602001600282015481526020016003820154815250509050806020015181604001518260600151935093509350509193909250565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a29906112c1565b60405180910390fd5b6000600560008381526020019081526020016000206000015403610a8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a829061132d565b60405180910390fd5b60056000828152602001908152602001600020600080820160009055600182016000610ab79190610cc0565b60028201600090556003820160009055505060005b600680549050811015610c69578160068281548110610aee57610aed6115cb565b5b90600052602060002090600402016000015403610c565760068181548110610b1957610b186115cb565b5b906000526020600020906004020160016000820154816000015560018201816001019081610b479190611610565b50600282015481600201556003820154816003015590505060066001600680549050610b739190611727565b81548110610b8457610b836115cb565b5b906000526020600020906004020160068281548110610ba657610ba56115cb565b5b90600052602060002090600402016000820154816000015560018201816001019081610bd29190611610565b506002820154816002015560038201548160030155905050600160066001600680549050610c009190611727565b81548110610c1157610c106115cb565b5b90600052602060002090600402016000820154816000015560018201816001019081610c3d9190611610565b5060028201548160020155600382015481600301559050505b8080610c619061175b565b915050610acc565b506006805480610c7c57610c7b6117a3565b5b6001900381819060005260206000209060040201600080820160009055600182016000610ca99190610cc0565b600282016000905560038201600090555050905550565b508054610ccc90611244565b6000825580601f10610cde5750610cfd565b601f016020900490600052602060002090810190610cfc9190610d00565b5b50565b5b80821115610d19576000816000905550600101610d01565b5090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b610d5c81610d49565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d9c578082015181840152602081019050610d81565b60008484015250505050565b6000601f19601f8301169050919050565b6000610dc482610d62565b610dce8185610d6d565b9350610dde818560208601610d7e565b610de781610da8565b840191505092915050565b6000608083016000830151610e0a6000860182610d53565b5060208301518482036020860152610e228282610db9565b9150506040830151610e376040860182610d53565b506060830151610e4a6060860182610d53565b508091505092915050565b6000610e618383610df2565b905092915050565b6000602082019050919050565b6000610e8182610d1d565b610e8b8185610d28565b935083602082028501610e9d85610d39565b8060005b85811015610ed95784840389528151610eba8582610e55565b9450610ec583610e69565b925060208a01995050600181019050610ea1565b50829750879550505050505092915050565b60006020820190508181036000830152610f058184610e76565b905092915050565b6000604051905090565b600080fd5b600080fd5b610f2a81610d49565b8114610f3557600080fd5b50565b600081359050610f4781610f21565b92915050565b600060208284031215610f6357610f62610f17565b5b6000610f7184828501610f38565b91505092915050565b610f8381610d49565b82525050565b600082825260208201905092915050565b6000610fa582610d62565b610faf8185610f89565b9350610fbf818560208601610d7e565b610fc881610da8565b840191505092915050565b6000608082019050610fe86000830187610f7a565b8181036020830152610ffa8186610f9a565b90506110096040830185610f7a565b6110166060830184610f7a565b95945050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61106182610da8565b810181811067ffffffffffffffff821117156110805761107f611029565b5b80604052505050565b6000611093610f0d565b905061109f8282611058565b919050565b600067ffffffffffffffff8211156110bf576110be611029565b5b6110c882610da8565b9050602081019050919050565b82818337600083830152505050565b60006110f76110f2846110a4565b611089565b90508281526020810184848401111561111357611112611024565b5b61111e8482856110d5565b509392505050565b600082601f83011261113b5761113a61101f565b5b813561114b8482602086016110e4565b91505092915050565b6000806000806080858703121561116e5761116d610f17565b5b600061117c87828801610f38565b945050602085013567ffffffffffffffff81111561119d5761119c610f1c565b5b6111a987828801611126565b93505060406111ba87828801610f38565b92505060606111cb87828801610f38565b91505092959194509250565b600060608201905081810360008301526111f18186610f9a565b90506112006020830185610f7a565b61120d6040830184610f7a565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061125c57607f821691505b60208210810361126f5761126e611215565b5b50919050565b7f4e6f7420417661696c61626c6520546f2054686973204163636f756e74000000600082015250565b60006112ab601d83610f89565b91506112b682611275565b602082019050919050565b600060208201905081810360008301526112da8161129e565b9050919050565b7f50726f64756374206e6f7420617661696c61626c650000000000000000000000600082015250565b6000611317601583610f89565b9150611322826112e1565b602082019050919050565b600060208201905081810360008301526113468161130a565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026113af7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611372565b6113b98683611372565b95508019841693508086168417925050509392505050565b6000819050919050565b60006113f66113f16113ec84610d49565b6113d1565b610d49565b9050919050565b6000819050919050565b611410836113db565b61142461141c826113fd565b84845461137f565b825550505050565b600090565b61143961142c565b611444818484611407565b505050565b5b818110156114685761145d600082611431565b60018101905061144a565b5050565b601f8211156114ad5761147e8161134d565b61148784611362565b81016020851015611496578190505b6114aa6114a285611362565b830182611449565b50505b505050565b600082821c905092915050565b60006114d0600019846008026114b2565b1980831691505092915050565b60006114e983836114bf565b9150826002028217905092915050565b61150282610d62565b67ffffffffffffffff81111561151b5761151a611029565b5b6115258254611244565b61153082828561146c565b600060209050601f8311600181146115635760008415611551578287015190505b61155b85826114dd565b8655506115c3565b601f1984166115718661134d565b60005b8281101561159957848901518255600182019150602085019450602081019050611574565b868310156115b657848901516115b2601f8916826114bf565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008154905061160981611244565b9050919050565b81810361161e5750506116f6565b611627826115fa565b67ffffffffffffffff8111156116405761163f611029565b5b61164a8254611244565b61165582828561146c565b6000601f8311600181146116845760008415611672578287015490505b61167c85826114dd565b8655506116ef565b601f1984166116928761134d565b965061169d8661134d565b60005b828110156116c5578489015482556001820191506001850194506020810190506116a0565b868310156116e257848901546116de601f8916826114bf565b8355505b6001600288020188555050505b5050505050505b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061173282610d49565b915061173d83610d49565b9250828203905081811115611755576117546116f8565b5b92915050565b600061176682610d49565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611798576117976116f8565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220795fde9d4bec00ad5ab7e418fcd430bed0ae18c2392370e788dea15680e43d8b64736f6c63430008130033";

type LockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Lock__factory extends ContractFactory {
  constructor(...args: LockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Lock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Lock__factory {
    return super.connect(runner) as Lock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LockInterface {
    return new Interface(_abi) as LockInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Lock {
    return new Contract(address, _abi, runner) as unknown as Lock;
  }
}
